module.exports = {
  swagger: '2.0',
  info: {
    version: '1.0.0',
    title: 'Malwarebytes',
    description: 'File Upload API Documentation',
  },
  basePath: '/api/v1',
  schemes: ['http'],
  consumes: ['multipart/form-data'],
  apis: ['../app/routers/*'],
  paths: {
    '/files': {
      post: {
        summary: 'Upload a file',
        description:
          'Upload a Portable Executable (PE) file. The file should not have been uploaded before and must be a valid PE file.',
        consumes: ['multipart/form-data'],
        parameters: [
          {
            in: 'formData',
            name: 'file',
            type: 'file',
            description: 'The PE file to upload',
            required: true,
          },
        ],
        responses: {
          201: {
            description: 'File uploaded successfully',
            schema: {
              type: 'object',
              properties: {
                message: {
                  type: 'string',
                },
              },
            },
          },
          400: {
            description: 'Invalid file upload response',
            schema: {
              type: 'object',
              properties: {
                error: {
                  type: 'string',
                },
              },
            },
          },
          400: {
            description:
              'Invalid file upload response, such as file type not allowed or file too large.',
            schema: {
              type: 'object',
              properties: {
                error: {
                  type: 'string',
                },
              },
            },
          },
          409: {
            description: 'File previously received. Event logged',
            schema: {
              type: 'object',
              properties: {
                error: {
                  type: 'string',
                },
              },
            },
          },
          429: {
            description: 'Too many requests, please try again later',
            schema: {
              type: 'object',
              properties: {
                error: {
                  type: 'string',
                },
              },
            },
          },
          409: {
            description: 'File previously received. Event logged',
            schema: {
              type: 'object',
              properties: {
                error: {
                  type: 'string',
                },
              },
            },
          },
          500: {
            description: 'Internal Server Error',
            schema: {
              type: 'object',
              properties: {
                error: {
                  type: 'string',
                },
              },
            },
          },
        },
      },
    },
  },
};
